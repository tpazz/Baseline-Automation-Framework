repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.0.81')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

dependencies {
    implementation ('net.serenity-bdd:serenity-core:2.0.67')  {
        exclude group: 'io.cucumber', module: 'cucumber-core'
    }
    implementation('net.serenity-bdd:serenity-cucumber4:1.0.21')
    implementation('io.cucumber:cucumber-java:4.2.0')
    implementation('io.cucumber:cucumber-junit:4.2.0')
    implementation('org.apache.logging.log4j:log4j-api:2.19.0')
    implementation('org.apache.logging.log4j:log4j-core:2.19.0')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.5.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.5.2')
    implementation('org.assertj:assertj-core:3.8.0')
    implementation(group: 'org.json', name: 'json', version: '20090211')
    implementation('com.google.code.gson:gson:2.8.9')
}

test {
    systemProperty('webdriver.driver','provided')
    systemProperty('webdriver.provided.type','mydriver')
    //String driver = "";
    switch (driver) {
        case "chrome":
            switch (os) {
                case "windows": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.windows.ChromeDriverProperties')
                    break
                case "linux": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.linux.ChromeDriverProperties')
                    break
                case "mac": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.mac.ChromeDriverProperties')
                    break
            }
            break;
        case "firefox":
            switch (os) {
                case "windows": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.windows.FireFoxDriverProperties')
                    break
                case "linux": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.linux.FireFoxDriverProperties')
                    break
                case "mac": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.mac.FireFoxDriverProperties')
                    break
            }
            break;
        case "edge":
            switch (os) {
                case "windows": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.windows.EdgeDriverProperties')
                    break
                case "linux": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.linux.EdgeDriverProperties')
                    break
                case "mac": systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.provided.mac.EdgeDriverProperties')
                    break
            }
            break
        maxParallelForks = 2 // Maximum value must be <= number of cores on CPU
    }
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)
