repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.0.81')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

dependencies {
    implementation ('net.serenity-bdd:serenity-core:2.0.67')  {
        exclude group: 'io.cucumber', module: 'cucumber-core'
    }

    implementation('net.serenity-bdd:serenity-cucumber4:1.0.21')
    implementation('io.cucumber:cucumber-java:4.2.0')
    implementation('io.cucumber:cucumber-junit:4.2.0')
    implementation('org.apache.logging.log4j:log4j-api:2.19.0')
    implementation('org.apache.logging.log4j:log4j-core:2.19.0')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.5.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.5.2')
    implementation('org.assertj:assertj-core:3.8.0')
    implementation(group: 'org.json', name: 'json', version: '20090211')
    implementation('com.google.code.gson:gson:2.8.9')
}

test {
    if ((System.getProperty('os.name').toLowerCase()).contains('linux')) {
	    if (driver == 'chrome') {
		systemProperty('webdriver.driver','chrome')
		systemProperty('webdriver.chrome.driver', 'src/test/resources/webdriver/linux/chromedriver-linux64/chromedriver')
		systemProperty('webdriver.chrome.binary', 'src/test/resources/browser/linux/chrome/opt/google/chrome/chrome')
		//systemProperty('webdriver.chrome.driver', 'src/test/resources/webdriver/windows/chromedriver-win64/chromedriver.exe')
		systemProperty('chrome.switches','--incognito;--start-maximized')
		systemProperty('headless.mode',true)     
	    } else if (driver == 'firefox') {
		systemProperty('webdriver.driver','firefox')
		systemProperty('webdriver.gecko.driver', 'src/test/resources/webdriver/linux/geckodriver-lin64/geckodriver')
		//systemProperty('webdriver.gecko.driver', 'src/test/resources/webdriver/windows/firefoxdriver-win64/geckodriver.exe')
		systemProperty('webdriver.firefox.bin', 'src/test/resources/browser/linux/firefox/firefox')
		systemProperty('gecko.firefox.options','{"args": ["-private","-headless"]}') 
	    } else if (driver == 'edge') {
		systemProperty('webdriver.driver','provided')
		systemProperty('webdriver.edge.driver', 'src/test/resources/webdriver/linux/edgedriver-lin64/msedgedriver')        
		systemProperty('webdriver.provided.type','mydriver')
		systemProperty('webdriver.provided.mydriver','org.example.tools.webdriver.EdgeDriverProperties')
		//systemProperty('webdriver.edge.driver', 'src/test/resources/webdriver/windows/edgedriver-win64/msedgedriver.exe')
		//systemProperty('webdriver.edge.binary', 'src/test/resources/browser/linux/edge/opt/microsoft/msedge/msedge')     
	    } 
    }      
    maxParallelForks = 2 // Maximum value must be <= number of cores on CPU
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)
